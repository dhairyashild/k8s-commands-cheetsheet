k run mypod --image=nginx --port=8080 --namespace=<namespace-name>
k label pod mypod --label=env=prod
kubectl get pods --namespace=<insert-namespace-name-here>

#####DEPLOYMENT
k create deploy deployname --image=nginx --port=80
kubectl create deploy deployname --image=nginx --port=80 --replicas=3  --namespace=my-namespace
kubectl create deploy deployname --image=nginx --port=80 --replicas=3 --namespace=my-namespace --dry-run=client -o yaml>deploy.yaml
kubectl label deploy new1 key=value
kubectl label deploy new1 key1=value1 key2=value2 key3=value3



##NAMESPACE== NS
k create ns dev-ns
kubectl config set-context --current --namespace=<namespace-name-here>     #### set ontext for new ns so changes default context to new ns

kubectl config view --minify | grep namespace:                             ###   0n which ns ur currently shows. if it shows nothing it means ur in default ns



####ROLLOUT
kubectl create deploy mydeploy --image=nginx1.14.1 
kubectl set image deployment/frontend <container-name>=image:tag --record=true # --record=true ====this creates change cause annotation.....+ we have nginx version =1.14.1/1.15.1/1.16.1/1.17.1/1.21.6             # Rolling update imperative
kubectl rollout history deployment/frontend                      # Check the history of deployments including the revision
kubectl rollout undo deployment/frontend                         # Rollback to the previous deployment
kubectl rollout history deployment/frontend  --revision=3        # it gives all info @ changes made in revision 3 only
kubectl rollout undo deployment/frontend --to-revision=2         # Rollback to a specific revision


###configmap
k exec PODNAME -- env                                ####  give env var --space before env




#### ENDPOINTS
k get endpoints                                        ==== give endpoints of all svc
k describe svc svcnav                                  ==== also give endpoints under that svc

k exec -it PODNAME -- /bin/bash           #### sometimes /bin/bash not works   # double dash and space before /bin/bash
error: Internal error occurred: Internal error occurred: error executing command in container: failed to exec in container: failed to start exec "66f59d5cbed97941a6ed142b15437155aa3f8ef9224ad0987751bc67966ec020": OCI runtime exec failed: exec failed: unable to start container process: exec: "/bin/bash": stat /bin/bash: no such file or directory: unknown

kubectl exec -it configmap-demo-pod -- /bin/sh
