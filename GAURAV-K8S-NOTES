13  vid -- SET ENV remember this only ==        env:  - name:   value:/valueFrom:             k exec -it podnav -c containernav -- env

spec:
  containers:
  - name: firstcontainer
    image: coolgourav147/nginx-custom
    env:
    - name: myname
      value: Gaurav
    - name: city
      value: Jatpur

###############
14  RUN COMMAND INSIDE POD (-- /bin/bash) ==                  kubectl exec -it myfirstpod -c firstcontainer -- /bin/bash
####################

15     COMMAND & ARGS

Command: Specifies the executable or script to run inside the container.--Example: command: ["/bin/bash"]
Args: Provides arguments for the specified command or default image command.--Example: args: ["-c", "date"]

Key Difference:
-command overrides the default entrypoint of the Docker image.
-args modifies or passes parameters to the command.


##### devops pro gyan  ########
commands and args:—  are used in the container specification to override the default entrypoint and arguments of a container.
### REMEMBER ===COMMAND NOT COMMANDS & args not arg  ===both are in      [] with "  " ,
-command: [ "              "    ,    "                   " ]
-args:    [ "              "    ,    "                   " ]

command: ["/bin/bash"]                       #ENTRYPOINT IN DOCKER(FIX)  = command: ["shell name where u want to run command"]
args: ["-c","date"]                          #CMD IN DOCKER(CAN BE OVERRIDE)= args: ["-c","command"]                   -c == command

containers:
      - name: nginx
        image: nginx:latest
        env:
        - name: MESSAGE
          value: "Hello from environment variable!"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        command: ["/bin/sh", "-c"]
        args: ["echo $MESSAGE && echo My Pod Name is $POD_NAME && sleep infinity"]
#############################################GAURAV 15 VID
spec:
  containers:
  - name: firstcontainer
    image: ubuntu
    env:
    - name: myname
      value: Gaurav
    - name: city
      value: Jalpur
    args: ["sleep", "1000"]                        #### remeber only args sufficint to run commands no need of k8s command 

#### remeber args can be given like this also
    args:
    - "sleep"
    - "1000"


######################################### 16 multi-cont pod  ---  remember nic(name image) must need for each container
apiVersion: v1
kind: Pod
metadata:
  name: busybox-sleep-less
spec:
  containers:
  - name: busybox
    image: busybox:1.28
    args:
    - sleep
    - "1000"
  - name: x
    image: ubuntu
    args: ["sleep","1000"]

################18   clusterip
k get po
k label pod busybox key=value
k expose pod busybox --port=8080 --target-port=80                   ####clusterip
k expose pod busybox --type=NodePort --port=8080 --target-port=80     ####nodeport
k curl busybox:8000                                    #### port of svc need for curl

apiVersion: v1
kind: Service
metadata:
  name: my-service
spec:
  selector:
    app.kubernetes.io/name: MyApp                     ####  (add key: value here)
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 9376
    - name: https
      protocol: TCP
      port: 443
      targetPort: 9377
################################################################
k explain --recursive deploy | less                                                  ---get all things @ any resoure

strategy    <DeploymentStrategy>
      rollingUpdate     <RollingUpdateDeployment>
        maxSurge        <IntOrString>
        maxUnavailable  <IntOrString>
      type      <string>
      enum: Recreate, RollingUpdate

strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate

strategy:    
      type: Recreate    
#############################################################################
################################################################30 DEPLOYMENT STRATEGIES

ROLLINGUPDATE-- Create new rs and use max surge to add new pod then delete old pod
             -- default strategy if not given-- 25% maxsurge & 25% max unavailable
             -- To set limit of number of revisions : Bydefault its 10.
spec:
    replicas: 5
    revisionHistoryLimit: 15      <------

recreate-- delete all pods in old rs and create new all pod -- Downtime-- used in dev stage where no need of HA
blue-green-
canary--

#######################################32 33 Kubernetes ( In Hindi ) - Resource Request     
####remember                         resources -----requests/limits------    cpu/memory add word by me
####remember                  free -m                    ==========shows how much memory avail on ur node so u can use remaining for pod
#### limits use for 1 microservice load not impact other

MiB = (binary, 1024²)
MB = (decimal, 1000²)
K8s uses MiB because computers work in binary (1024-based).


spec:
      containers:
      - name: nginx
        image: nginx:1.14.2
        ports:
        - containerPort: 80 
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:                          ## cpu and memory added by me if copy from k explain --recursive
            memory: "128Mi"                ## not use m (megabyte) use only Mi (mebibyte-binary1024) 
            cpu: "500m"                    ## capital M for memory but small m for cpu ani chiktun   ## 500m ==== 0.5 both same
####################################37Service DNS
go in pod in 1 ns
k exec -it podnav -- /bin/bash
curl svcnav                                            ####if ur in same ns of that svc
curl svcnav.nsnav.svc.cluster.local
####remember                        svc.ns                             SCL(.svc.cluster.local)     

##################################39. Kubernetes ( In Hindi ) - Resource Quota
Compute Resource Quota----requests  limits cpu memory
Object Count Quota ----pods , services, secrets, configmaps          link---  https://kubernetes.io/docs/concepts/policy/resource-quotas/


apiVersion: v1
kind: ResourceQuota
metadata:
  name: myquota
spec:
  hard:                                  ####
    pods: 10
    requests.cpu: 500m                   ### 500m = 500 millicores (0.5 core), 
    requests.memory: 500Mi               ### container made request khali cpu ani memory yete, pan ithe lagun -- requests.memory
    limits.cpu: "1"                      #### "1" = 1 core
    limits.memory: 1Gi                   #### 1 gibibyte== 1024  MB

docker container stats container-id
k describe ns                            ####it gives Quota and limitrange values here
###########40. Kubernetes ( In Hindi ) - LimitRange  
                                                    Sets min/max resource limits  for  pods in a namespace.
k get limits/limitranges              #### both same
k expalin limitrange | less                   ==== it gives apiversion , kind ...
k api-resources | grep -i limits            ##### it gives short names used for that resource like limits   =limitranges




